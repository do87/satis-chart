apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum | quote }}

    spec:
      containers:
      - name: {{ .Chart.Name }}-nginx
        image: "{{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag }}"
        imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
        ports:
          - containerPort: 80
        livenessProbe:
          tcpSocket:
            port: 80
            initialDelaySeconds: 5
            periodSeconds: 20
        readinessProbe:
          tcpSocket:
            port: 80
            initialDelaySeconds: 3
            periodSeconds: 5
        volumeMounts:
          - name: nginx-config
            mountPath: /etc/nginx/conf.d/default.conf
            subPath: default.conf
            readOnly: true
          - name: build-output
            mountPath: /composer
        {{- if .Values.nginx.resources }}
        resources:
{{ toYaml .Values.nginx.resources | indent 12 }}
        {{- end }}

      - name: {{ .Chart.Name }}-satis
        image: "{{ .Values.satis.image.repository }}:{{ .Values.satis.image.tag }}"
        imagePullPolicy: {{ .Values.satis.image.pullPolicy }}
        volumeMounts:
          - name: satis-json
            mountPath: /build/satis.json
            subPath: satis.json
          - name: build-output
            mountPath: /composer
        command: [ "/bin/sh", "-c", "--" ]
        args: [ "
          while true; do \
            mkdir -p /composer/build/output/dist;  \
            php /satis/bin/satis --ansi -vvv build /build/satis.json /composer/build/output;  \
            sleep 60;  \
          done;" ]
        resources:
{{ toYaml .Values.satis.resources | indent 10 }}

    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}

      volumes:
        - name: satis-json
          configMap:
            name: "{{ template "fullname" . }}-config"
            optional: false

        - name: nginx-config
          configMap:
            name: "{{ template "fullname" . }}-config"
            optional: true

        {{- if .Values.persistent.enabled }}
        - name: build-output
          persistentVolumeClaim:
            claimName: {{ template "fullname" . }}
        {{- else }}
        - name: build-output
          emptyDir: {}
        {{- end -}}

{{- if .Values.persistent.enabled }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  accessModes:
    - {{ .Values.persistent.accessMode | quote }}
  resources:
    requests:
      storage: {{ .Values.persistent.size | quote }}
{{- if (eq "-" .Values.persistent.storageClass) }}
  storageClassName: ""
{{- else }}
  storageClassName: "{{ .Values.persistent.storageClass }}"
{{- end }}
{{- end }}
